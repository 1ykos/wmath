 namespace wmath{
  const uint8_t uint8_inverse[256] = {
      1, //   1
    171, //   3
    205, //   5
    183, //   7
     57, //   9
    163, //  11
    197, //  13
    239, //  15
    241, //  17
     27, //  19
     61, //  21
    167, //  23
     41, //  25
     19, //  27
     53, //  29
    223, //  31
    225, //  33
    139, //  35
    173, //  37
    151, //  39
     25, //  41
    131, //  43
    165, //  45
    207, //  47
    209, //  49
    251, //  51
     29, //  53
    135, //  55
      9, //  57
    243, //  59
     21, //  61
    191, //  63
    193, //  65
    107, //  67
    141, //  69
    119, //  71
    249, //  73
     99, //  75
    133, //  77
    175, //  79
    177, //  81
    219, //  83
    253, //  85
    103, //  87
    233, //  89
    211, //  91
    245, //  93
    159, //  95
    161, //  97
     75, //  99
    109, // 101
     87, // 103
    217, // 105
     67, // 107
    101, // 109
    143, // 111
    145, // 113
    187, // 115
    221, // 117
     71, // 119
    201, // 121
    179, // 123
    213, // 125
    127, // 127
    129, // 129
     43, // 131
     77, // 133
     55, // 135
    185, // 137
     35, // 139
     69, // 141
    111, // 143
    113, // 145
    155, // 147
    189, // 149
     39, // 151
    169, // 153
    147, // 155
    181, // 157
     95, // 159
     97, // 161
     11, // 163
     45, // 165
     23, // 167
    153, // 169
      3, // 171
     37, // 173
     79, // 175
     81, // 177
    123, // 179
    157, // 181
      7, // 183
    137, // 185
    115, // 187
    149, // 189
     63, // 191
     65, // 193
    235, // 195
     13, // 197
    247, // 199
    121, // 201
    227, // 203
      5, // 205
     47, // 207
     49, // 209
     91, // 211
    125, // 213
    231, // 215
    105, // 217
     83, // 219
    117, // 221
     31, // 223
     33, // 225
    203, // 227
    237, // 229
    215, // 231
     89, // 233
    195, // 235
    229, // 237
     15, // 239
     17, // 241
     59, // 243
     93, // 245
    199, // 247
     73, // 249
     51, // 251
     85, // 253
    255  // 255
  };

  template<typename T>
  constexpr T modular_inverse(const T& a) {
    T x = a&1;
    for (T i=1;i!=digits<T>();++i) x*=2-a*x;
    return x;
  }

  /*
  template<typename T>
  constexpr T modular_inverse(const T& a) {
    T x = uint8_inverse[(a&255)>>1]; 
    for (T i=1;i!=digits<T>()/8;++i) {
      x = (x*(2-a*x));
    }
    return x;
  }*/
}
